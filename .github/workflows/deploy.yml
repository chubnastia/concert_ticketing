name: Deploy to ECS
on:
  push:
    branches: [ main ]

permissions:
  id-token: write   # OIDC
  contents: read

env:
  AWS_REGION: eu-north-1
  AWS_ACCOUNT_ID: "900335273492"
  ECR_REPOSITORY: concert-backend
  ECS_CLUSTER: concert-cluster
  ECS_SERVICE: concert-service

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: gradle

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: arn:aws:iam::900335273492:role/github-actions-deploy-concert

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build app JAR (optional if image builds from source)
        run: ./gradlew bootJar --no-daemon

      - name: Build, tag, and push Docker image
        run: |
          IMAGE_URI=${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}
          docker build -t $IMAGE_URI:latest .
          docker push $IMAGE_URI:latest
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV

      - name: Force new ECS deployment
        run: |
          aws ecs update-service \
            --cluster "${{ env.ECS_CLUSTER }}" \
            --service "${{ env.ECS_SERVICE }}" \
            --force-new-deployment
